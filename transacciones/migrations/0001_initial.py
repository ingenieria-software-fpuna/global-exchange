# Generated by Django 4.2.23 on 2025-09-24 23:04

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('metodo_pago', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clientes', '0005_cliente_monto_limite_transaccion'),
        ('monedas', '0004_moneda_monto_limite_transaccion'),
        ('metodo_cobro', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EstadoTransaccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(choices=[('PENDIENTE', 'Pendiente de Pago'), ('PROCESANDO', 'Procesando Pago'), ('PAGADA', 'Pagada'), ('CANCELADA', 'Cancelada'), ('EXPIRADA', 'Expirada')], max_length=15, unique=True, verbose_name='Código del estado')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre descriptivo')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción del estado')),
                ('es_final', models.BooleanField(default=False, help_text='Indica si este estado es final (no puede cambiar a otro)', verbose_name='Es estado final')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Estado de Transacción',
                'verbose_name_plural': 'Estados de Transacción',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='TipoOperacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(choices=[('COMPRA', 'Compra de Divisas'), ('VENTA', 'Venta de Divisas')], max_length=10, unique=True, verbose_name='Código del tipo')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre descriptivo')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción del tipo de operación')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
            ],
            options={
                'verbose_name': 'Tipo de Operación',
                'verbose_name_plural': 'Tipos de Operación',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Transaccion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_transaccion', models.CharField(help_text='Identificador único para la transacción', max_length=50, unique=True, verbose_name='ID de Transacción')),
                ('monto_origen', models.DecimalField(decimal_places=2, help_text='Cantidad en la moneda de origen', max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Monto en moneda origen')),
                ('monto_destino', models.DecimalField(decimal_places=2, help_text='Cantidad que se entrega en la moneda destino', max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Monto en moneda destino')),
                ('tasa_cambio', models.DecimalField(decimal_places=4, help_text='Tasa de cambio aplicada en la transacción', max_digits=12, verbose_name='Tasa de Cambio')),
                ('porcentaje_comision', models.DecimalField(decimal_places=2, default=0.0, help_text='Porcentaje de comisión aplicado', max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Porcentaje de Comisión (%)')),
                ('monto_comision', models.DecimalField(decimal_places=2, default=0.0, help_text='Monto total de comisión en la moneda destino', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto de Comisión')),
                ('porcentaje_descuento', models.DecimalField(decimal_places=2, default=0.0, help_text='Porcentaje de descuento aplicado por tipo de cliente', max_digits=5, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Porcentaje de Descuento (%)')),
                ('monto_descuento', models.DecimalField(decimal_places=2, default=0.0, help_text='Monto total de descuento aplicado', max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Monto de Descuento')),
                ('codigo_verificacion', models.CharField(help_text='Código alfanumérico para verificar la transacción', max_length=10, verbose_name='Código de Verificación')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('fecha_expiracion', models.DateTimeField(help_text='Fecha límite para completar el pago', verbose_name='Fecha de Expiración')),
                ('fecha_pago', models.DateTimeField(blank=True, help_text='Fecha en que se completó el pago', null=True, verbose_name='Fecha de Pago')),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones adicionales sobre la transacción', verbose_name='Observaciones')),
                ('ip_cliente', models.GenericIPAddressField(blank=True, help_text='Dirección IP desde donde se originó la transacción', null=True, verbose_name='IP del Cliente')),
                ('cliente', models.ForeignKey(blank=True, help_text='Cliente que realiza la transacción (opcional para walk-ins)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transacciones', to='clientes.cliente', verbose_name='Cliente')),
                ('estado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transacciones', to='transacciones.estadotransaccion', verbose_name='Estado')),
                ('metodo_cobro', models.ForeignKey(blank=True, help_text='Método por el cual se recibe el dinero', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transacciones_cobro', to='metodo_cobro.metodocobro', verbose_name='Método de Cobro')),
                ('metodo_pago', models.ForeignKey(blank=True, help_text='Método por el cual se entrega el dinero', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transacciones_pago', to='metodo_pago.metodopago', verbose_name='Método de Pago')),
                ('moneda_destino', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transacciones_destino', to='monedas.moneda', verbose_name='Moneda de Destino')),
                ('moneda_origen', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transacciones_origen', to='monedas.moneda', verbose_name='Moneda de Origen')),
                ('tipo_operacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transacciones', to='transacciones.tipooperacion', verbose_name='Tipo de Operación')),
                ('usuario', models.ForeignKey(help_text='Usuario del sistema que procesa la transacción', on_delete=django.db.models.deletion.PROTECT, related_name='transacciones_realizadas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario que procesa')),
            ],
            options={
                'verbose_name': 'Transacción',
                'verbose_name_plural': 'Transacciones',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['id_transaccion'], name='transaccion_id_tran_332e3d_idx'), models.Index(fields=['cliente', '-fecha_creacion'], name='transaccion_cliente_e7b1a6_idx'), models.Index(fields=['usuario', '-fecha_creacion'], name='transaccion_usuario_a2135d_idx'), models.Index(fields=['estado', '-fecha_creacion'], name='transaccion_estado__0c4f8d_idx'), models.Index(fields=['fecha_expiracion'], name='transaccion_fecha_e_88d2df_idx'), models.Index(fields=['tipo_operacion', '-fecha_creacion'], name='transaccion_tipo_op_eeaf2d_idx')],
            },
        ),
    ]
